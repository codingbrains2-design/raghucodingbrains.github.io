use FFMpeg;


$ffmpeg = FFMpeg\FFMpeg::create(array(
				'ffmpeg.binaries'  => 'C://ffmpeg/bin/ffmpeg.exe', 
				'ffprobe.binaries' => 'C://ffmpeg/bin/ffprobe.exe', 
				'timeout'          => 3600, 
				'ffmpeg.threads'   => 12,   
				));
			
			/*----------------------------Opening Uploaded Video--------------------------------*/
			$uploaded_video = $ffmpeg->open($request->file('video'));
			

			/*----------------------------retrieving Thumbnail--------------------------------*/
			$video_thumbnail_path = base_path() . '/public/images/Artist/thumbnail'.date('U').'.jpg';
			
			$uploaded_video->frame(FFMpeg\Coordinate\TimeCode::fromSeconds(2))->save($video_thumbnail_path);

			$video->VideoThumbnail	 = $video_thumbnail_path;

			
			/*----------------------------Applying Watermark----------------------------------*/
			$uploaded_video
			->filters()
			->watermark("public/vrl_logo.png", array(
				'position' => 'absolute',
				'x' => 250,
				'y' => 250,
				));
			

			/*-----------------------------------Saving Video----------------------------------*/
			$video_destination = base_path() . '/public/video/thumbnail/'.date('U').$filename;
			
			$format = new FFMpeg\Format\Video\X264('libmp3lame', 'libx264');
			$uploaded_video->save($format, $video_destination);
			
			$video->VideoURL	 = $video_destination;

			$ffprobe = FFMpeg\FFProbe::create(array(
				'ffmpeg.binaries'  => 'C://ffmpeg/bin/ffmpeg.exe', 
				'ffprobe.binaries' => 'C://ffmpeg/bin/ffprobe.exe', 
				'timeout'          => 3600, 
				'ffmpeg.threads'   => 12,   
				));

			
			/*----------------------------retrieving Video Duration--------------------------------*/
			$video->VideoLength = $ffprobe->streams($request->file('video'))
			->videos()
			->first()                       
			->get('duration');  





			// $destinationPath = base_path() . '/public/video/';
			// $request->file('video')->move($destinationPath, "video/".date('U') .$filename);

			if($video->save())

			{

				return redirect('record_video')->with('success','Video Successfully Uploaded');

			}
